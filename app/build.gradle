buildscript {

    repositories {
        mavenCentral()
    }

    dependencies {
        def libs = rootProject.ext.Libraries

        classpath libs.hugo
        classpath libs.retrolambda
    }
}

def config = rootProject.ext
def plugins = config.Plugins
def libs = config.Libraries

apply plugin: plugins.android_app
apply plugin: plugins.hugo
apply plugin: plugins.retrolambda

android {
    def versions = config.Versions
    def appConfig = config.AppConfig

    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk

        applicationId appConfig.id
        versionCode appConfig.versionCode
        versionName appConfig.versionName

        testInstrumentationRunner libs.test_runner
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix appConfig.debugSuffix
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // testing
    androidTestCompile(libs.test_espresso, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile libs.test_junit

    // Android Support
    compile libs.support_appCompat
    compile libs.support_design
    compile libs.support_constraintLayout

    // Rx
    compile libs.rxAndroid

    // Play Services

    // Butterknife
    compile libs.butterknife
    annotationProcessor libs.annotationProcessorButterknife

    // Pixplicity Prefs
    compile libs.easyPrefs

    // GSon
    compile libs.gson

    // Retrofit
    compile libs.retrofit
    compile libs.retrofit_gsonConverter
    compile libs.retrofit_rxAdapter

    // Picasso
    compile libs.picasso

    // Dagger
    compile libs.dagger
    annotationProcessor libs.annotationProcessorDagger

    // OkHttp
    compile libs.okHttp
    compile libs.okHttp_loggingInterceptor

    // AutoValue
    provided libs.autoValue
    annotationProcessor libs.autoValue

    // AutoValue Gson
    provided libs.autoValue_gson
    annotationProcessor libs.autoValue_gson
}